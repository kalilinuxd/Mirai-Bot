const cmdN = "ุณุจ";

module.exports = {
  config: {
    name: cmdN,
    version: "1.0.0",
    hasPermission: 0,
    credits: "You",
    description: "ุชูุนูู ุฃู ุฅููุงู ุฑุฏ ุงูุณุจ ูุงูุดุชู ูู ุงููุฌููุนุงุช",
    usePrefix: true,
    commandCategory: "system",
    usages: "/ุณุจ on | /ุณุจ off",
    cooldowns: 2
  },

  // ๐ข ููู ุชุณุชุนูู /ุณุจ on ุฃู /ุณุจ off
  run: async function ({ event, api, args, Threads }) {
    if (!event.isGroup) {
      return api.sendMessage("โ ูุงุฏ ุงูุฃูุฑ ููุฎุฏู ุบูุฑ ูุงููุฌููุนุงุช.", event.threadID, event.messageID);
    }

    if (!args[0]) {
      return api.sendMessage("โน๏ธ ุงุณุชุนูู: /ุณุจ on ุฃู /ุณุจ off", event.threadID, event.messageID);
    }

    const data = (await Threads.getData(event.threadID)).data || {};

    if (args[0].toLowerCase() === "on") {
      data.sibEnabled = true;
      await Threads.setData(event.threadID, { data });
      return api.sendMessage("โ ุชู ุชูุนูู ูุถุน ุงูุณุจ ููุงุฏ ุงููุฌููุนุฉ.", event.threadID, event.messageID);
    }

    if (args[0].toLowerCase() === "off") {
      data.sibEnabled = false;
      await Threads.setData(event.threadID, { data });
      return api.sendMessage("โน๏ธ ุชู ุฅููุงู ูุถุน ุงูุณุจ ููุงุฏ ุงููุฌููุนุฉ.", event.threadID, event.messageID);
    }

    return api.sendMessage("โ ุงุฎุชูุงุฑ ุบูุฑ ูุนุฑูู. ุงุณุชุนูู: /ุณุจ on | /ุณุจ off", event.threadID, event.messageID);
  },

  // ๐ ูุฑุงูุจุฉ ุงูุฑุณุงุฆู ูุงูุฑุฏ ุฅุฐุง ููุนู
  handleEvent: async function ({ event, api, Threads }) {
    try {
      if (!event.isGroup) return;
      if (!event.body) return;

      const text = event.body.toLowerCase();

      // ูุฌูุจ ุญุงูุฉ ุงููุฌููุนุฉ
      const { data } = await Threads.getData(event.threadID);
      if (!data || !data.sibEnabled) return;

      // ูุงุฆุญุฉ ุงููููุงุช ุงูููููุนุฉ
      const badWords = [
        "ุญูุงุฑ", "ููุจ", "ูููุฎ", "ุชูู", "ูุงููุนู", "ุจูุช ูููุฎ", "ุฌุฏุงู", "ุฎุชู"
      ];

      if (badWords.some(word => text.includes(word))) {
        const replies = [
          "ูุง ุข ุฎููุงุ ุจูุง ุณุจู ๐คฃ ุฑุงู ูุงุดู ูุนููู!",
          "ุดููู ุณุจูู ุจุงุด ุชุณุจููุ ูุฏู ุฃุนุตุงุจู ๐",
          "ุข ุงูุฑุงุฌูุ ููุงูู ุจุญุงู ุงููุงู ูุงู ุฏูุงู ุงูุฌูุฑุงู: ุถุนูู ููุชูุทุน ๐",
          "ุฑุงู ุนููู ุฏุงูุฒ ูู mode airplane โ๏ธ",
          "ุณูุฑ ููุจ ุนูู ุงูุจุงู ุฃุจ ุฏูุงู ุนููู ูููู ุถุงุน ููู ๐",
          "ุงููุถุฑุฉ ุฏูุงูู ุจุญุงู ูุงุณูุฑูุท ุจูุง ุฎุจุฒ ๐ฅ",
          "ุงูููู... ุญูุง ููููุงุ ุงูุช ุจุงูู ูุชุฌุฑุจ ุชุฏูู ๐"
        ];

        const reply = replies[Math.floor(Math.random() * replies.length)];
        return api.sendMessage(reply, event.threadID, event.messageID);
      }
    } catch (e) {
      console.error("sib error:", e.message);
    }
  }
};
